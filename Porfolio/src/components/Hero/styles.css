.hero {
  min-height: 100vh;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  padding: 2rem;
}

.hero-background {
  position: absolute;
  inset: 0;
  z-index: -1;
}

.hero-gradient {
  position: absolute;
  inset: 0;
  background: 
    radial-gradient(circle at calc(var(--mouse-x, 0.5) * 100%) calc(var(--mouse-y, 0.5) * 100%), 
      rgba(124, 58, 237, 0.15),
      transparent 50%),
    radial-gradient(circle at calc((1 - var(--mouse-x, 0.5)) * 100%) calc((1 - var(--mouse-y, 0.5)) * 100%),
      rgba(79, 70, 229, 0.15),
      transparent 50%);
  opacity: 0.8;
  transition: opacity 0.3s ease;
}

.hero-particles {
  position: absolute;
  inset: 0;
  background-image: radial-gradient(circle at center,
    rgba(255, 255, 255, 0.1) 0%,
    transparent 1%);
  background-size: 3vmin 3vmin;
  animation: particles 20s linear infinite;
}

@keyframes particles {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.hero-content {
  display: grid;
  grid-template-columns: 1.2fr 0.8fr;
  gap: 4rem;
  align-items: center;
  max-width: 1400px;
  margin: 0 auto;
}

.hero-text {
  display: flex;
  flex-direction: column;
  justify-content: center;
  gap: 2rem;
}

.hero-badge {
  display: inline-flex;
  align-items: center;
  gap: 0.75rem;
  padding: 0.75rem 1.5rem;
  border-radius: 100px;
  width: fit-content;
}

.badge-icon {
  font-size: 1.25rem;
}

.badge-text {
  font-size: 0.875rem;
  color: var(--text-secondary);
}

.hero-roles {
  position: relative;
  height: 2rem;
  overflow: hidden;
}

.roles-wrapper {
  animation: rotate-roles 6s infinite;
}

.roles-wrapper span {
  display: block;
  height: 2rem;
  line-height: 2rem;
  color: var(--accent-color);
}

@keyframes rotate-roles {
  0%, 33% { transform: translateY(0); }
  33%, 66% { transform: translateY(-2rem); }
  66%, 100% { transform: translateY(-4rem); }
}

.hero-description {
  padding: 1.5rem;
  border-radius: 1rem;
  line-height: 1.6;
}

.hero-cta {
  display: flex;
  gap: 1rem;
}

.primary-button,
.secondary-button {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 1rem 2rem;
  border-radius: 0.5rem;
  font-weight: 500;
  transition: all 0.3s ease;
}

.button-icon {
  transition: transform 0.3s ease;
}

.primary-button:hover .button-icon,
.secondary-button:hover .button-icon {
  transform: translateX(5px);
}

.hero-stats {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 2rem;
  padding: 2rem;
  border-radius: 1rem;
  margin-top: 2rem;
}

.stat-item {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.5rem;
}

.stat-number {
  font-size: 2rem;
  font-weight: 700;
}

.stat-label {
  font-size: 0.875rem;
  color: var(--text-secondary);
}

.hero-visual {
  display: flex;
  align-items: center;
  justify-content: center;
}

.visual-container {
  width: 100%;
  aspect-ratio: 1;
  border-radius: 1rem;
  padding: 2rem;
  position: relative;
  overflow: hidden;
}

.code-preview {
  width: 100%;
  height: 100%;
  position: relative;
}

/* Add more advanced responsive styles */
@media (max-width: 1024px) {
  .hero-content {
    grid-template-columns: 1fr;
    gap: 3rem;
  }

  .hero-text {
    text-align: center;
    align-items: center;
  }

  .hero-stats {
    grid-template-columns: repeat(3, 1fr);
  }
}

@media (max-width: 768px) {
  .hero {
    padding: 1rem;
  }

  .hero-stats {
    grid-template-columns: 1fr;
    gap: 1rem;
  }

  .hero-cta {
    flex-direction: column;
    width: 100%;
  }

  .primary-button,
  .secondary-button {
    width: 100%;
    justify-content: center;
  }

  .hero-content {
    grid-template-columns: 1fr;
    text-align: center;
  }
}

/* Add to existing styles */
.hero-profile {
  position: relative;
  margin-top: 0;
  display: flex;
  justify-content: center;
  align-items: center;
}

.profile-image {
  width: 300px;
  height: 300px;
  border-radius: 20px;
  object-fit: cover;
  border: 4px solid rgba(255, 255, 255, 0.1);
  box-shadow: 0 0 30px rgba(99, 102, 241, 0.3);
  transition: all 0.3s ease;
}

.profile-image:hover {
  transform: translateY(-10px);
  box-shadow: 0 0 40px rgba(99, 102, 241, 0.5);
} 